//创建一个空目录

$ mkdir learngit
$ cd learngit
$ pwd		//显示当前目录

$ git init	//把当前目录变成git可以管理的仓库

$ git add	//把文件添加到仓库
$ git commit	//把文件提交到仓库

$ git status	//查看仓库当前状态

$ git diff	//查看修改内容

$ git log	//查看版本历史记录

$ git reset --hard HEAD^	//回退到上一个版本

$ git reflog	//记录每一次命令

$ git checkout --learngit.txt	//把learngit.txt文件在工作区的修改全部撤销

$ rm		//删除文件（工作区）

$ git rm 	//删除文件（版本库）
$ git commit

$ git push	//把本地库的内容推送到远程

$ git remote add origin git@server-name:path/repo-name.git	//关联一个远程库
$ git push -u origin master					//第一次推送master分支的所有内容
$ git push origin master					//后期每次本地提交后，远程推送最新修改

$ git clone	//从远程库克隆一个本地库

$ git checkout -b dev 	//创建分支dev并切换过去

$ git branch dev 	//创建分支
$ git checkout dev	//切换分支

$ git branch 		//查看当前分支

$ git merge		//用于合并指定分支到当前分支

$ git branch -d dev	//删除分支dev

$ git log --graph	//可以查看分支合并图

$ git merge --no-ff -m""dev	//表示合并dev分支，但是禁用Fast forward

$ git stash		//把当前工作现场“储藏”起来
$ git stash list 	//查看“储藏”起来的工作现场
$ git stash apply	//恢复“储藏”起来的工作现场，但是stash内容没有删除，需用git stash drop来删除
$ git stash pop		//恢复工作现场的同时删除“储藏”记录

$ git remote		//查看远程库的信息
$ git remote -v		//显示更详细的信息

$ git pull		//抓取最新的提交

$ git tag <name>	//打一个新标签
$ git tag 		//查看所有标签

$ git tag -d v0.1	//删除标签v0.1
